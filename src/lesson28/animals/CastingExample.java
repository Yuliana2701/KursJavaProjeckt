package lesson28.animals;

/*
В Java обьекты могут пренадлежать классу Х и при этом могут быть приведены к другому типу
если между классами есть связь наследования - это называется кастингом(cаsting)
Casting ывает 2х видов:
1.Восходящее преобразование(upcasting) - это преобразование обьекта дочернего класса в тип родительского класса
2.Нисходящее преобразование (downcasting)-преобразование обьекта родительского класса в тип дочернего класса
 */

public class CastingExample {
    public static void main(String[] args) {
      //Восходящее и Нисходящее преобразование
        //Восходящее происходит автоматически

        Animal animal = new Cat();//тип Cat автоматически преобразуется к типу  Animal

        /*
        !!!!ВАЖНО!
        Тип ссылочной переменной определяет 2 вещи:
        1.Ссылки на обьекты каких типов,могут хранится в этой переменной
        2.Список методов,которые можно вызвать, обращаясь к этой переменной
         */

        //сылочная переменная может хранить обьект своего класса или любого ребенка

        //какая реализация будет вызвана-определяется типом обектов

        animal.voice();
        // Неявное автоматическое преобразование Hamster к типу Animal

        Animal animal1 = new Hamster();//сейчас обьект Hamster
        animal1.voice();

        Animal[] animals = new Animal[3];
        animals[0] = animal;
        animals[1] = animal1;
        animals[2] = new Dog();

        for (int i = 0; i < animals.length; i++){
            animals[i].voice();
        }

        Object object = new Cat();
        System.out.println(object.toString());

        //Нисходящее преобразование

    }
    
}
